{"version":3,"sources":["App.jsx","index.jsx"],"names":["goodsFromServer","SORT_BY_LETTER","SORT_BY_LENGTHS","App","useState","sortField","setSortField","reverseField","setReverseField","visibleGoods","goods","prepGoods","sort","good1","good2","length","localeCompare","reverse","getGoods","className","type","cn","onClick","map","good","ReactDOM","render","document","getElementById"],"mappings":"iPAKaA,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UAGIC,EAAiB,OACjBC,EAAkB,SAyBjB,IAAMC,EAAM,WACjB,MAAkCC,mBAAS,IAA3C,mBAAOC,EAAP,KAAkBC,EAAlB,KACA,EAAwCF,oBAAS,GAAjD,mBAAOG,EAAP,KAAqBC,EAArB,KACMC,EA1BR,SAAkBC,EAAlB,GAAuD,IAA5BL,EAA2B,EAA3BA,UAAWE,EAAgB,EAAhBA,aAC9BI,EAAS,YAAOD,GAmBtB,OAjBIL,GACFM,EAAUC,MAAK,SAACC,EAAOC,GACrB,OAAQT,GACN,KAAKH,EACH,OAAOW,EAAME,OAASD,EAAMC,OAC9B,KAAKd,EACH,OAAOY,EAAMG,cAAcF,GAC7B,QACE,OAAO,MAKXP,GACFI,EAAUM,UAGLN,EAMcO,CAASlB,EAAiB,CAAEK,YAAWE,iBAM5D,OACE,sBAAKY,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,KAAK,SACLD,UAAWE,IACT,CACE,iBAAkBhB,IAAcJ,EAChC,0BAA2BI,IAAcJ,IAG7CqB,QAAS,WACPhB,EAAaL,IATjB,iCAeA,wBACEmB,KAAK,SACLD,UAAWE,IACT,CACE,oBAAqBhB,IAAcH,EACnC,6BAA8BG,IAAcH,IAGhDoB,QAAS,WACPhB,EAAaJ,IATjB,4BAeA,wBACEkB,KAAK,SACLD,UAAWE,IACT,CACE,qBAAsC,IAAjBd,EACrB,8BAA+C,IAAjBA,IAGlCe,QAAS,WACPd,GAAiBD,IATrB,qBAcCA,GAAgBF,EAEb,wBACEe,KAAK,SACLD,UAAU,4BACVG,QAzDS,WACnBd,GAAgB,GAChBF,EAAa,KAoDL,mBAQA,QAGN,6BACGG,EAAac,KAAI,SAAAC,GAAI,OACpB,oBAAI,UAAQ,OAAZ,SAAoBA,aChH9BC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.9bc2cf31.chunk.js","sourcesContent":["import 'bulma/css/bulma.css';\nimport './App.scss';\nimport cn from 'classnames';\nimport { useState } from 'react';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nconst SORT_BY_LETTER = 'name';\nconst SORT_BY_LENGTHS = 'length';\n\nfunction getGoods(goods, { sortField, reverseField }) {\n  const prepGoods = [...goods];\n\n  if (sortField) {\n    prepGoods.sort((good1, good2) => {\n      switch (sortField) {\n        case SORT_BY_LENGTHS:\n          return good1.length - good2.length;\n        case SORT_BY_LETTER:\n          return good1.localeCompare(good2);\n        default:\n          return 0;\n      }\n    });\n  }\n\n  if (reverseField) {\n    prepGoods.reverse();\n  }\n\n  return prepGoods;\n}\n\nexport const App = () => {\n  const [sortField, setSortField] = useState('');\n  const [reverseField, setReverseField] = useState(false);\n  const visibleGoods = getGoods(goodsFromServer, { sortField, reverseField });\n  const resetSorting = () => {\n    setReverseField(false);\n    setSortField('');\n  };\n\n  return (\n    <div className=\"section content\">\n      <div className=\"buttons\">\n        <button\n          type=\"button\"\n          className={cn(\n            {\n              'button is-info': sortField === SORT_BY_LETTER,\n              'button is-info is-light': sortField !== SORT_BY_LETTER,\n            },\n          )}\n          onClick={() => {\n            setSortField(SORT_BY_LETTER);\n          }}\n        >\n          Sort alphabetically\n        </button>\n\n        <button\n          type=\"button\"\n          className={cn(\n            {\n              'button is-success': sortField === SORT_BY_LENGTHS,\n              'button is-success is-light': sortField !== SORT_BY_LENGTHS,\n            },\n          )}\n          onClick={() => {\n            setSortField(SORT_BY_LENGTHS);\n          }}\n        >\n          Sort by length\n        </button>\n\n        <button\n          type=\"button\"\n          className={cn(\n            {\n              'button is-warning': reverseField === true,\n              'button is-warning is-light': reverseField === false,\n            },\n          )}\n          onClick={() => {\n            setReverseField(!reverseField);\n          }}\n        >\n          Reverse\n        </button>\n        {reverseField || sortField\n          ? (\n            <button\n              type=\"button\"\n              className=\"button is-danger is-light\"\n              onClick={resetSorting}\n            >\n              Reset\n            </button>\n          )\n          : null}\n      </div>\n\n      <ul>\n        {visibleGoods.map(good => (\n          <li data-cy=\"Good\">{good}</li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}